/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import controladores.factory.CFactory;
import controladores.factory.IActividad;
import controladores.factory.IRepartidor;
import controladores.factory.ITarjeta;
import entidades.Tarjeta;
import java.awt.event.ItemEvent;
import javax.swing.JOptionPane;
import javax.swing.table.TableRowSorter;
import util.DatosIni;
import util.Formateador;
import util.MyAbstractTableModel;
import util.MyComboBoxModel;
import util.Resultado;

/**
 *
 * @author Rosary
 */
public class FrmAsignarTarjetas extends javax.swing.JInternalFrame {

    private final IActividad cActividad;
    private final IRepartidor cRepartidor;
    private final ITarjeta cTarjeta;
    private final MyAbstractTableModel atm = new MyAbstractTableModel();
    private final MyComboBoxModel cbmActividad = new MyComboBoxModel();
    private final MyComboBoxModel cbmRepartidor = new MyComboBoxModel();
    private TableRowSorter<MyAbstractTableModel> sorter;

    public FrmAsignarTarjetas() {
        initComponents();
        int bd = DatosIni.getBd().equals("MySql") ? CFactory.MYSQL : CFactory.ACCESS;
        cActividad = CFactory.getCFactory(bd).getCActividad();
        cRepartidor = CFactory.getCFactory(bd).getCRepartidor();
        cTarjeta = CFactory.getCFactory(bd).getCTarjeta();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cboActividad = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cboRepartidor = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtNumTarjIni = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNumTarjFin = new javax.swing.JTextField();
        btnAsignarTarjetasRango = new javax.swing.JButton();
        txtNumTarjInd = new javax.swing.JTextField();
        btnAsignarTarjetasIndividual = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Asignar Tarjetas");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setText("Actividad");

        jLabel2.setText("Repartidor");

        cboRepartidor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboRepartidorItemStateChanged(evt);
            }
        });

        jLabel3.setText("Tarjetas     del");

        txtNumTarjIni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumTarjIniKeyTyped(evt);
            }
        });

        jLabel4.setText("al");

        txtNumTarjFin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumTarjFinKeyTyped(evt);
            }
        });

        btnAsignarTarjetasRango.setText("Asignar");
        btnAsignarTarjetasRango.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarTarjetasRangoActionPerformed(evt);
            }
        });

        txtNumTarjInd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumTarjIndKeyTyped(evt);
            }
        });

        btnAsignarTarjetasIndividual.setText("Asignar");
        btnAsignarTarjetasIndividual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarTarjetasIndividualActionPerformed(evt);
            }
        });

        jLabel5.setText("O agregar Tarjeta");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboActividad, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboRepartidor, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(txtNumTarjInd, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAsignarTarjetasIndividual))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(txtNumTarjIni, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtNumTarjFin, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnAsignarTarjetasRango))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboActividad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cboRepartidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNumTarjIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtNumTarjFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAsignarTarjetasRango))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumTarjInd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAsignarTarjetasIndividual)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        cargarActividad();
        cargarRepartidores();
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnAsignarTarjetasRangoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarTarjetasRangoActionPerformed
        // TODO add your handling code here:
        
        if(cboActividad.getItemCount()==0||cboRepartidor.getItemCount()==0){
            JOptionPane.showMessageDialog(this, "Indique campos necesarios.", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        
        int idActividad = cbmActividad.getSelectedCodigo();
        int idRepartidor = cbmRepartidor.getSelectedCodigo();

        int numInicial = Integer.parseInt(txtNumTarjIni.getText());
        int numFin = Integer.parseInt(txtNumTarjFin.getText());

        if (numFin < numInicial) {
            JOptionPane.showMessageDialog(this, "Por favor verifique el rango.", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        }

        //si es de 301 - 350, habra entonces 350 - 301 + 1 = 50
        Tarjeta tarjeta;
        int tarjetas = numFin - numInicial + 1;
        for (int i = 0; i < tarjetas; i++) {
            tarjeta = new Tarjeta();
            tarjeta.setColaborador(" ");
            tarjeta.setEstado("NO ASISTE");
            tarjeta.setMontoPagado(0);
            tarjeta.setNota(" ");
            tarjeta.setId_actividad(idActividad);
            tarjeta.setId_repartidor(idRepartidor);
            String numTarjeta = getNumTarjetaFormateada(numInicial);
            tarjeta.setNumTarjeta(numTarjeta);

            Resultado resultado = cTarjeta.registrar(tarjeta);
            if (resultado.isCorrecto()) {
                cargarTabla();
                txtNumTarjFin.setText("");
                txtNumTarjIni.setText("");
            } else {
                Formateador.mostrarMensajeError(resultado, this);
            }

            numInicial++;
        }
    }//GEN-LAST:event_btnAsignarTarjetasRangoActionPerformed

    private void cboRepartidorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboRepartidorItemStateChanged
        // TODO add your handling code here:
        if (cboActividad.getItemCount() != 0) {
            if (evt.getStateChange() == ItemEvent.SELECTED) {

                cargarTabla();
            }
        }
    }//GEN-LAST:event_cboRepartidorItemStateChanged

    private void btnAsignarTarjetasIndividualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarTarjetasIndividualActionPerformed
        // TODO add your handling code here:
        if(cboActividad.getItemCount()==0||cboRepartidor.getItemCount()==0){
            JOptionPane.showMessageDialog(this, "Indique campos necesarios.", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int idActividad = cbmActividad.getSelectedCodigo();
        int idRepartidor = cbmRepartidor.getSelectedCodigo();

        Tarjeta tarjeta = new Tarjeta();
        tarjeta.setColaborador(" ");
        tarjeta.setEstado("NO ASISTE");
        tarjeta.setMontoPagado(0);
        tarjeta.setNota(" ");
        tarjeta.setId_actividad(idActividad);
        tarjeta.setId_repartidor(idRepartidor);
        String numTarjeta = getNumTarjetaFormateada(Integer.parseInt(txtNumTarjInd.getText()));
        tarjeta.setNumTarjeta(numTarjeta);

        Resultado resultado = cTarjeta.registrar(tarjeta);
        if (resultado.isCorrecto()) {
            cargarTabla();
            txtNumTarjInd.setText("");
        } else {
            Formateador.mostrarMensajeError(resultado, this);
        }
    }//GEN-LAST:event_btnAsignarTarjetasIndividualActionPerformed

    private void txtNumTarjIniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumTarjIniKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        Formateador.setMaxTamanio(txtNumTarjIni, 6, evt);
    }//GEN-LAST:event_txtNumTarjIniKeyTyped

    private void txtNumTarjFinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumTarjFinKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        Formateador.setMaxTamanio(txtNumTarjFin, 6, evt);
    }//GEN-LAST:event_txtNumTarjFinKeyTyped

    private void txtNumTarjIndKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumTarjIndKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        Formateador.setMaxTamanio(txtNumTarjInd, 6, evt);
    }//GEN-LAST:event_txtNumTarjIndKeyTyped

    private void cargarTabla() {
        int idActividad = cbmActividad.getSelectedCodigo();
        int idRepartidor = cbmRepartidor.getSelectedCodigo();
        Resultado resultado = cTarjeta.listarTarjetasAsignadas(idActividad, idRepartidor);

        if (resultado.isCorrecto()) {
            String cabecera = "Id,Núm. tarjeta";
            atm.setData(resultado.getCache(), cabecera);
            tabla.setModel(atm);
            Formateador.redimensionar(tabla, cabecera, "0,100");
            sorter = new TableRowSorter<>(atm);
            tabla.setRowSorter(sorter);
        } else {
            Formateador.mostrarMensajeError(resultado, this);
        }
    }

    private String getNumTarjetaFormateada(int num) {
        String numFormateado = "";
        if (num < 10) {
            numFormateado = "00000" + num;
        } else if (num < 100) {
            numFormateado = "0000" + num;
        } else if (num < 1000) {
            numFormateado = "000" + num;
        } else if (num < 10000) {
            numFormateado = "00" + num;
        } else if (num < 100000) {
            numFormateado = "0" + num;
        } else {
            numFormateado = "" + num;
        }
        return numFormateado;
    }

    private void cargarRepartidores() {
        Resultado resultado = cRepartidor.listar();
        if (resultado.isCorrecto()) {
            cbmRepartidor.setData(resultado.getItemsCombo());
            cboRepartidor.setModel(cbmRepartidor);
            if (cboRepartidor.getItemCount() != 0) {
                cboRepartidor.setSelectedIndex(0);
            }
        } else {
            Formateador.mostrarMensajeError(resultado, this);
        }
    }

    private void cargarActividad() {
        Resultado resultado = cActividad.listar();
        if (resultado.isCorrecto()) {
            cbmActividad.setData(resultado.getItemsCombo());
            cboActividad.setModel(cbmActividad);
            if (cboActividad.getItemCount() != 0) {
                cboActividad.setSelectedIndex(0);
            }
        } else {
            Formateador.mostrarMensajeError(resultado, this);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAsignarTarjetasIndividual;
    private javax.swing.JButton btnAsignarTarjetasRango;
    private javax.swing.JComboBox cboActividad;
    private javax.swing.JComboBox cboRepartidor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtNumTarjFin;
    private javax.swing.JTextField txtNumTarjInd;
    private javax.swing.JTextField txtNumTarjIni;
    // End of variables declaration//GEN-END:variables
}
